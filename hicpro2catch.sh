#!/bin/bash

## CaTCH       
## Author(s): Yinxiu Zhan
## Contact: yinxiu.zhant@fmi.ch
## This software is distributed without any guarantee under the terms of the GNU General
## Public License, either Version 2, June 1991 or Version 3, June 2007.

##
## First version of converter between HiCPro and CaTCH 

function usage {
    echo -e "usage : hicpro2catch.sh -i INPUT -b BINSIZE -c CHROM [-h]"
    echo -e "Use option -h|--help for more information"
}

function help {
    usage;
    echo 
    echo "Generate Higlass input file from HiC-Pro results"
    echo "See https://github.com/hms-dbmi/higlass-website for details about Higlass"
    echo "---------------"
    echo "OPTIONS"
    echo
    echo "   -i|--input INPUT : .matrix file generated by HiC-Pro"
    echo "   -b|--binsize BINSIZE : The binning size of the hicpro matrix"
    echo "   -c|--chrom CHROM : File containing chromosomes size"
    echo "   [-h|--help]: help"
    exit;
}


if [ $# -lt 3 ]
then
    usage
    exit
fi

# Transform long options to short ones
for arg in "$@"; do
  shift
  case "$arg" in
      "--input") set -- "$@" "-i" ;;
      "--binsize")   set -- "$@" "-b" ;;
      "--chrom")   set -- "$@" "-c" ;;
      "--help")   set -- "$@" "-h" ;;
       *)        set -- "$@" "$arg"
  esac
done

chrfile=""
bin=""
file=""

while getopts ":i:b:c:h" OPT
do
    case $OPT in
        i) file=$OPTARG;;
        b) bin=$OPTARG;;
        c) chrfile=$OPTARG;;
        h) help ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            usage
            exit 1
            ;;
    esac
done

if [[ -z $file ]];
then
    usage
    exit
fi


if [[ -z $chrfile ]];
then
    usage
    exit
fi


head -n 20 $chrfile > reduced_chromosome_file

awk 'BEGIN{bin="'"$bin"'"+0.;conta=0}{

	print $1,conta+1,conta+int($2/bin)+1
	conta=conta+int($2/bin)+1
			

}' reduced_chromosome_file > bin


awk 'BEGIN{fn=0; nchr=0}{

	if(FNR==1) fn++
	if(fn==1){
		chr[nchr]=$1;
		start[nchr]=$2;
		end[nchr]=$3;
		nchr++
	}

	if(fn==2){
		for(i=0;i<nchr;i++){
			if($1>=start[i] && $1<=end[i] && $2>=start[i] && $2<=end[i]){
				print $1-start[i],$2-start[i],$3 > chr[i]".dat"
				print $2-start[i],$1-start[i],$3 > chr[i]".dat"
			}
		}
	}

}' bin $file 



rm reduced_chromosome_file bin
